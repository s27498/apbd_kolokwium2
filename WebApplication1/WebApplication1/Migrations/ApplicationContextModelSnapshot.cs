// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Context;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Backpack_Slots", b =>
                {
                    b.Property<int>("PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK"));

                    b.Property<int>("FK_character")
                        .HasColumnType("int");

                    b.Property<int>("FK_item")
                        .HasColumnType("int");

                    b.HasKey("PK");

                    b.HasIndex("FK_character");

                    b.HasIndex("FK_item");

                    b.ToTable("Backpack_Slots");

                    b.HasData(
                        new
                        {
                            PK = 1,
                            FK_character = 1,
                            FK_item = 1
                        },
                        new
                        {
                            PK = 2,
                            FK_character = 2,
                            FK_item = 2
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Characters", b =>
                {
                    b.Property<int>("PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK"));

                    b.Property<int>("current_weig")
                        .HasColumnType("int");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("max_weight")
                        .HasColumnType("int");

                    b.Property<int>("money")
                        .HasColumnType("int");

                    b.HasKey("PK");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            PK = 1,
                            current_weig = 10,
                            first_name = "Jan",
                            last_name = "Kowal",
                            max_weight = 50,
                            money = 100
                        },
                        new
                        {
                            PK = 2,
                            current_weig = 5,
                            first_name = "Piotr",
                            last_name = "Dzwon",
                            max_weight = 45,
                            money = 150
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Characters_Titles", b =>
                {
                    b.Property<int>("FK_charact")
                        .HasColumnType("int");

                    b.Property<int>("FK_title")
                        .HasColumnType("int");

                    b.Property<DateTime>("aquire_at")
                        .HasColumnType("datetime2");

                    b.HasKey("FK_charact", "FK_title");

                    b.HasIndex("FK_title");

                    b.ToTable("Characters_Titles");

                    b.HasData(
                        new
                        {
                            FK_charact = 1,
                            FK_title = 1,
                            aquire_at = new DateTime(2024, 6, 14, 12, 32, 2, 794, DateTimeKind.Local).AddTicks(8332)
                        },
                        new
                        {
                            FK_charact = 2,
                            FK_title = 2,
                            aquire_at = new DateTime(2024, 6, 14, 12, 32, 2, 794, DateTimeKind.Local).AddTicks(8373)
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Weig")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Miecz",
                            Weig = 5
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tarcza",
                            Weig = 7
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Titles", b =>
                {
                    b.Property<int>("PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK"));

                    b.Property<string>("nam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PK");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            PK = 1,
                            nam = "Wojownik"
                        },
                        new
                        {
                            PK = 2,
                            nam = "Mag"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Backpack_Slots", b =>
                {
                    b.HasOne("WebApplication1.Models.Characters", "Characters")
                        .WithMany("Backpacks")
                        .HasForeignKey("FK_character")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Items", "Items")
                        .WithMany("Backpacks")
                        .HasForeignKey("FK_item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Characters");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("WebApplication1.Models.Characters_Titles", b =>
                {
                    b.HasOne("WebApplication1.Models.Characters", "Character")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("FK_charact")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Titles", "Title")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("FK_title")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("WebApplication1.Models.Characters", b =>
                {
                    b.Navigation("Backpacks");

                    b.Navigation("CharacterTitles");
                });

            modelBuilder.Entity("WebApplication1.Models.Items", b =>
                {
                    b.Navigation("Backpacks");
                });

            modelBuilder.Entity("WebApplication1.Models.Titles", b =>
                {
                    b.Navigation("CharacterTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
